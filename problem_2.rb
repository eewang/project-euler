# PROBLEM NAME
# Even Fibonacci numbers

# PROBLEM DESCRIPTION
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# PROCESS
# => For all Fibonacci numbers below 4,000,000, add up all even numbers.
# => 1) Get all Fibonacci numbers below 4,000,000
# => 2) Determine which numbers are even
# => 3) Add up those even numbers

# => 1 iteration

# fib_array.size = 2
# fib_array.push(fib_array[-1] + fib_array[-2])

# => 2 iteration

# fib_array.size = 3
# fib_array.push(fib_array[-1] + fib_array[-2])

# fib_array.max

sum = 0
max = 4000000

fib_array = [1, 2]
fib_sum = 3
fib_even_sum = 2

i = 0
while i < max
  fib_next = fib_array[-2] + fib_array[-1]
  fib_array.push(fib_next)
  fib_sum += fib_next
  if fib_next % 2 == 0
    fib_even_sum += fib_next
  end
  i = fib_array.max
  puts "max is #{i}, total sum is #{fib_sum} and even sum is #{fib_even_sum}"
end